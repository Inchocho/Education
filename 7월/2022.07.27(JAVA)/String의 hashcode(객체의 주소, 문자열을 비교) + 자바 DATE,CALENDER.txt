
String의 hashcode가 같다면 객체는 달라도 문자열은 동일하다는 것을 의미 
반면에 System.identityHashCode()는
오버라이드가 안되며 객체의 고유한 hashCode를 리턴합니다.

================================================> 기존

String[] numbers = {"one", "two", "three"};
for(int i=0; i<numbers.length; i++) {
    System.out.println(numbers[i]);
}

================================================> for-each (단점은 무조건 한개씩 증가임 ++)

String[] numbers = {"one", "two", "three"};
for(String number: numbers) {
    System.out.println(number);
}
================================================================================
Math.random()의 문제점을 찾아보자
================================================================================

1회차
(int)(Math.random() * 10)의 결과

2 6 3 3 6 9 8 6 8 5 
3 6 9 6 2 6 8 1 8 0 
3 9 1 3 4 7 7 1 4 4 
6 2 5 2 1 2 1 7 8 3  (1회차~4회차까지 결과 Math.random() * 10));

random.nextInt(10)의 결과

6 1 5 1 3 5 7 0 2 8 
2 2 1 4 3 2 7 4 2 5 
0 9 2 2 7 7 7 5 5 8 
0 3 3 6 5 8 9 4 1 4  (1회차~4회차까지 결과 random.nextInt(10));

2회차
(int)(Math.random() * 10)의 결과

3 6 9 6 2 6 8 1 8 0 

random.nextInt(10)의 결과

2 2 1 4 3 2 7 4 2 5 

3회차
(int)(Math.random() * 10)의 결과

3 9 1 3 4 7 7 1 4 4 

random.nextInt(10)의 결과

0 9 2 2 7 7 7 5 5 8 

4회차
(int)(Math.random() * 10)의 결과

6 2 5 2 1 2 1 7 8 3 

random.nextInt(10)의 결과

0 3 3 6 5 8 9 4 1 4 


자바의 date나 Calendar는 위험함 그러니까 java8 신기능을 사용하게된다는데
2개 참조
https://madplay.github.io/post/java8-date-and-time
https://jojoldu.tistory.com/26