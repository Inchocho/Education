

게시판 테이블

회원 테이블


회원 테이블 구조

유저번호 기본키 시퀀스
유저이름 
유저비밀번호
유저이메일 고유키
유저성별
유저생성일
유저정보수정일

USER TABLE

CREATE TABLE USER (
	  USER_NO NUMBER CONSTRAINT USER_PK PRIMARY KEY
	, USER_NAME VARCHAR2(40) NOT NULL
	, USER_PASSWORD VARCHAR2(40) NOT NULL
	, USER_EMAIL VARCHAR2(60) CONSTRAINT USER_UK UNIQUE NOT NULL
	, USER_GENDER VARCHAR2(10) NOT NULL
	, USER_CREATEDATE DATE NOT NULL
	, USER_MODDATE DATE NOT NULL
);

CREATE SEQUNCE USER_NO_SEQ
	INCREMENT BY 1
	START WITH 1;
	
회원 생성시 
INSERT INTO USER VALUES(USER_NO_SEQ.NEXTVAL, ?, ?, ?, ?, SYSDATE, SYSDATE);

회원 목록 테이블 구조

유저번호 외래키 ( 회원 목록 테이블의 유저번호를 참조) -- 해당 유저가 작성한 여부를 확인하기 위한 칼럼
게시글 번호 고유키(시퀀스)
게시글 제목
게시글 내용
게시글 비밀번호 (글 작성시마다 해당글의 비밀번호 적용)
게시판 생성일
게시판 수정일 

CREATE TABLE BOARD (
	  USER_NO NUMBER CONSTRAINT BOARD_FK REFERENCES USER(USER_NO) NOT NULL
	, BOARD_NO NUMBER CONSTRAINT BOARD_PK PRIMARY KEY
	, BOARD_TITLE VARCHAR2(100) NOT NULL
	, BOARD_CONTENT VARCHAR2(4000) NOT NULL
	, BOARD_PASSWORD VARCHAR2(40) NOT NULL
	, BOARD_CREATEDATE DATE NOT NULL
	, BOARD_MODDATE	DATE NOT NULL
);

CREATE SEQUNCE BOARD_NO_SEQ
	INCREMENT BY 1
	START WITH 1;
	
게시글 생성시
INSERT INTO BOARD VALUES( USER_NO값 세션으로 받은게 들어감, BOARD_NO_SEQ.NEXTVAL, ?, ?, ?, SYSDATE, SYSDATE);
	
로그인시 세션으로 값을 넘긴다(브라우저 종료, 로그아웃(session.invalidate())전까지 정보가 유지됨)


댓글 테이블

게시글 번호 외래키 (게시글 테이블의 게시글 번호를 참조) -- 해당 게시글의 댓글인지 확인하기 위한 칼럼
댓글 작성자
댓글 비밀번호
댓글 작성일 

CREATE TABLE REPLY (
	  BOARD_NO NUMBER CONSTRAINT REPLY_FK REFERENCES BOARD(BOARD_NO) NOT NULL
	, REPLY_WRITER VARCHAR2(40) NOT NULL
	, REPLY_PASSWORD VARCHAR2(40) NOT NULL DEFAULT 1234 
	, REPLY_CREATEDATE DATE NOT NULL
);