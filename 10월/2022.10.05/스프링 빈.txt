스프링 빈(Spring Bean)
스프링 컨테이너에 의해서 관리되는 객체
Managed Bean이라고도 함
스프링 설정파일에 등록되어 사용, 자동등록 기능 사용 가능

Spring Bean Configuration file을 resources 폴더 안에 생성해서 작성하면 된다.
id : 클래스명과 동일한 객체명(첫 글자는 소문자)
class : 클래스의 전체 패키지 명

<bean id="helloDAO" class="kr.co.acomp.hello.HelloDAO"/>
스프링 컨테이너(Spring Container)
Managed Bean이 모여있는 곳

IoC 컨테이너로써 Application Context 클래스로 구현됨.
스프링에서 Context는 곧 스프링 컨테이너를 의미함.
IoC 컨테이너는 객체의 생성을 책임지고, 의존성을 관리
POJO의 생성, 초기화, 서비스, 소멸에 대한 권한을 가짐
개발자들이 직접 POJO를 생성할 수 있지만 컨테이너에게 맡김
컨테이너가 존재하지 않으면 객체의 생성과 소멸에서 많은 부하가 생길 수 있다.
스프링 컨테이너에서 DL 사용 방법

AbstractApplicationContext ctx =
            new ClassPathXmlApplicationContext("/spring-context.xml");
위 코드를 작성하는 순간 스프링 컨테이너가 만들어지게 된다.

spring-context.xml : 스프링 설정파일 명
HelloDAO dao = ctx.getBean("helloDAO", HelloDAO.class");
int result = dao.addNumber(5,6);
HelloDAO 클래스 타입을 사용하는 helloDAO 라는 빈을 사용하겠다.
해당 빈은 이제 객체처럼 사용할 수 있음.

scoreDto를 빈에 등록함 (spring-context.xml)
생성자 인자(constructor-arg)를 등록함
	<bean id="scoreDto" class="kr.co.ezen.ScoreDto">
		<constructor-arg>
			<value type="java.lang.String">이순신</value>
		</constructor-arg>
		<constructor-arg>
			<value>100</value>
		</constructor-arg>
		<constructor-arg>
			<value>100</value>
		</constructor-arg>
	</bean>