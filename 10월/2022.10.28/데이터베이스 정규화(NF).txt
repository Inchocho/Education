정규화의 목적
1. 불필요한 데이터(data redundancy)를 제거한다.
2. 데이터 저장을 "논리적으로" 한다.

데이터 베이스 정규화 

예제(정규화되지 않은 테이블) 테이블(정규화되지 않음)

S_Id		S_Name		S_Address		Subject_opted
401			Adam		Noida			Bio
402			Alex		Panipat			Maths
403			Stuart		Jammu			Maths
404			Adam		Noida			Physis

위 테이블에는 Adam이 2번 들어가있음 
데이터 핸들링시 문제가 발생하는 이유 

갱신이상
1. Adam의 Address가 변경될 시 여러 줄의 데이터를 갱신해야함 (1번,4번row)
데이터 불일치 현상이 발생 할 수 있음 

Maths가 싫어서 Bio로 옮기게 되는경우 ‘Maths’ 의 갯수는 
과목코드의 갯수만큼 있으므로 모두 ‘Bio’ 로 변경해주어야 한다. 
이때 로우를 모두 변경하지 않고 두개만 바꾸는 경우 Maths인지 Bio인지 알 수 없게 된다.

삽입이상
2. 학생이 아무런 과목도 수강하지 않을경우 Subject_opted칼럼에 NULL이 들어감
아직 수업을 하나도 수강하지 않은 학생이 있다고 가정하자. 
현재 KEY 를 학번과 과목코드로 지정해 놓았고 기본키로 쓰이는 컬럼은 NULL 이 될 수 없으므로 
그 학생은 이 테이블에 추가 될 수가 없다. 굳이 삽입하려면 ‘미수강’ 같은 과목코드를 새로 만들어서 삽입해야 한다.

삭제이상
3. Alex학생이 과목 수강을 취소한다면 Alex의 레코드(Row)가 아예 테이블에서 지워짐
즉 수강을 취소하고싶었는데 나머지 Alex의 학생정보마저 모두 사라지게 된다

###제1정규화 (1NF Nomarlization formula)###

제1정규화는 각 로우마다 칼럼의 값이 1개 씩만 있어야 한다. 
이를 원자값(Atomic Value)를 갖는다고 한다.

[1차정규화 되기 전]
Student		Age		Subject
Adam		15		Biology, Maths
Alex		16		Maths
Stuart		17		Maths

위 테이블의 경우 Adam의 Subject칼럼값이 2개를 갖는다 즉 1차정규형을 만족하지 못함
위의 정보를 표현하기 위해서는 한 개의 로우를 더 만들어야 한다 

[1차 정규화 된 테이블**]
Student		Age		Subject
Adam		15		Biology
Adam		15		Maths
Alex		16		Maths
Stuart		17		Maths

###제2정규화 (2NF) 테이블의 모든 칼럼이 완전 함수적 종속을 만족###
모든 칼럼이 완전 함수적 종속: 기본키중에 특정 컬럼에만 종속된 컬럼(부분적 종속)이 없어야 한다

위의 1차 정규화 된 테이블을 보면 기본키는 Student, Subject 2개로 볼 수 있다
이 2개가 합쳐져야 한개의 로우로 구분할 수 있는데 이때 Age는 Student에만 종속된다(아담은 15살 - 종속됨), (15살은 생물학? 종속되지 않음)
즉 Student칼럼의 값을 알경우 Age의 값을 알 수 있다. 따라서 Age가 2번 들어갈 필요가 없이 분리한다

[2차 정규화 된 테이블 1** 학생-나이]
Student		Age		
Adam		15		
Alex		16		
Stuart		17		

[2차 정규화 된 테이블 2** 학생-과목]
Student		Subject
Adam		Biology
Adam		Maths
Alex		Maths
Stuart		Maths

즉 부분적으로 종속되었던 나이와 학생으로 테이블을 나누고
학생과 과목으로 테이블을 나눈다

###3차 정규화 (3NF) 기본키를 제외한 속성들 간의 이행적 함수 종속이 없음###

[2차 정규화가 된 테이블]
Student_id		Student_name		DOB		Street		City		State		Zip

Student_id를 기본키로 하는, 기본키가 하나인 2차정규형을 만족하는 테이블
그러나 Zip코드만 알면 Street,City,State 칼럼이 결정되기 때문에 이 칼럼들에는 중복된 데이터가 발생 할 수 있다
3차 정규형은 기본키를 제외한 속성들 간에는 이행적 함수 종속이 없어야 한다
즉 위경우 학생id를 제외한 나머지 칼럼으로는 다른 칼럼의 값을 결정 할 수 없어야 한다

[3차 정규화가 된 테이블 1** 학생 상세정보](학생ID를 기본키로 나머지 칼럼값이 결정된다)
Stduent_id		Student_name		DOB		Zip

[3차 정규화가 된 테이블 2** 주소] (Zip코드를 기본키로 나머지 칼럼값이 결정된다)
Zip		Street		City		State

데이터를 논리적인 단위(학생, 주소)로 분리하였다

###BCNF(Boyce and Codd Normal Form) ###
3차 정규형의 강화버전 
3차 정규형을 만족하면서 모든 결정자가 후보키 집합에 속한 정규형이다

[3차 정규화  된 테이블]
학생		과목		교수		학점
1번		ABC		김인영	A
2번		CDE		Robert	A
3번		CDE		Robert	A

위 경우 학생을 기본키로 하며 학생을 기본키로 나머지 칼럼 (과목, 교수, 학점)이 결정된다
즉 위 테이블의 경우 후보키는 수퍼키중에서 최소성을 만족하는데 (학생, 과목)이 해당한다
학생,과목을 통해 그 로우를 유일하게 구분할 수 있다
그런데 위의 경우를 보면 교수칼럼이 결정자 역할을 하게 된다 (과목을 교수가 결정하는 형태임)
즉 교수가 정해지면 과목이 정해진다, 그러나 교수는 후보키가 아니므로 BCNF를 만족하지 못한다 
즉 일반칼럼이 후보키를 결정하는 경우 BCNF를 만족하지 못한다

위 테이블의 경우 교수가 담당하는 과목이 변경될 경우(Robert의 담당과목이 변경시) 두개의 로우를 갱신해야 한다

[BCNF 된 테이블 1 ** 교수]
교수		과목
김인영	ABC
Robert	CDE

[BCNF 된 테이블 2 ** 수강]
학생		과목		학점
1번		ABC		A
2번		CDE		A
3번		CDE		A

