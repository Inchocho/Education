##데이터베이스 용어 정리##

다 같은 표현인데 상황마다 용어가 달라짐 ( 파일 = 엔티티 = 테이블 )

	파일 시스템				데이터베이스 모델링			관계형 데이터베이스(RDBMS)
	파일(File)			엔티티(Entity)			테이블(Table)
	레코드(Record)		튜플(Tuple)				행(Row)
	키(Key)				유일값(Identifier)		기본키(Primary key), Unique
	필드(Field)			어트리뷰트,속성(attribute)	칼럼(Column)


##키의 종류 ##

##행 (Row)
테이블을 구성하는 데이터들 중 가로로 묶은 데이터셋을 의미한다. 일반적으로 행은 한 객체에 대한 정보를 가지고있다. 
이 또한 관계형 데이터베이스에서는 튜플 (Tuple) 또는 레코드 (Record)라는 이름으로 불린다.

##릴레이션 (관계형 DB에서 정보를 구분하여 저장하는 기본 단위 - 테이블을 생각하자 - )
한 릴레이션에는 똑같은 튜플이 포함 될 수 없으므로 릴레이션에 포함된 튜플은 모두 상이하다
(멤버 테이블에 멤버명, 멤버명 이런식으로 겹치지 않는다) 
한 릴레이션에서 포함된 튜플 사이에는 순서가 없다
튜플들의 삽입, 삭제 등의 작업으로 인해 릴레이션은 시간에 따라 변한다
릴레이션 스키마를 구성하는 속성들 간 순서는 	중요하지 않다
릴레이션을 구분하는 튜플을 유일하게 식별하기 위해 ##속성(=칼럼)##들의 부분집합 키(Key)로 설정한다

[1]슈퍼키(Super Key)
- 테이블에서 각 행을 유일하게 식별할 수 있는 하나 또는 그 이상의 속성들의 집합이다. 
  슈퍼키는 유일성만 만족하면 슈퍼키가 될 수 있다.
  유일성이란 하나의 키로 특정 행을 바로 찾아낼수 있는 고유한 데이터 속성을 나타낸다
  어떤 속성끼리 묶던 중복값이 안나오고 서로 구별만 할 수 있으면 된다
  슈퍼키는 한 릴레이션 내에 있는 속성들의 집합으로 구성된 키로서 릴레이션을 
  구성하는 모든 튜플들 중 슈퍼키로 구성된 속성의 집합과 동일한 값을 나타나지 않는다.
  ##슈퍼키는 릴레이션을 구성하는 모든 튜플에 대해 유일성은 만족시키지만, 최소성은 만족시키지 못한다.##

[예제 테이블 슈퍼키 확인]
학번		주민등록번호		이름		나이 [<--속성: 학번, 주민등록번호, 이름, 나이]
1		12341234		김씨		27  
2		23423442		이씨		27
3		34312231		최씨		19
4		45235211		박씨		21

학번,주민등록번호,이름, 학번+이름, 학번+나이 등등 슈퍼키는 많음
위 경우 학번+주민등록번호로도 중복없이 구별, 이름+나이로도 구별, 이름+주민등록번호 등으로도 구별할 수 있다
만약 (학생번호, 이름) 을 묶어서 키로 사용하면, 동명이인이 있어도 튜플을 구분할 수 있다. 
그러나 최소성(학번만으로 구분)은 만족하지 못한다. 따라서 학번+이름은 슈퍼키가 될 수 있다

[2]후보키(Candidate Key)
- 테이블에서 각 행을 유일하게 식별할 수 있는 최소한의 속성들의 집합이다. 
  후보키는 기본키가 될 수 있는 후보들이며 유일성과 최소성을 동시에 만족해야한다.
- 하나의 릴레이션 내에서는 중복된 튜플이 있을 수 없으므로 모든 릴레이션에는 반드시 하나 이상의 후보키가 존재한다

[예제 테이블 슈퍼키 확인]  
학번		주민등록번호		이름		나이
1		12341234		김씨		27
2		23423442		이씨		27
3		34312231		최씨		19
4		45235211		박씨		21  

학번 슈퍼키와 주민등록번호 슈퍼키는 속성들이 각 1개씩 이루어져 있다
하지만 이름+나이 슈퍼키는 속성이 2개로 최소성을 만족하지 못하므로 후보키가 될 수 없다
(이름이나 나이같은경우 중복이 발생 할 수 있으므로 유일성을 만족하지 못하므로 슈퍼키조차 될 수 없다)

[3]기본키(Primary Key)
후보키들 중에서 하나를 선택한 키로 최소성과 유일성을 만족하는 속성이다
테이블에서 기본키는 오직 1개만 지정 할 수 있다
복합키를 통해 두개 이상의 칼럼을 묶어서 기본키로 지정 할 수 있다
기본키는 절대로 NULL값을 가질 수 없고, 중복된 값을 가질 수 없다
기본키는 유일하게 각 행들을 구별 할 수 있도록 쓰인다

##
정확히는 테이블은 오직 하나의 기본키(PK)를 가질 수 있다가 정확한 의미
기본키를 오직 하나의 칼럼으로만 지정할 수 있다가 아니다!!!
왠만하면 그냥 칼럼 하나로 기본키를 지정하는게 대다수임 왠만하면 복합키 사용은 피하는편
기본키를 구성하는 칼럼이 여러개 일 수는 있지만 기본키는 오직 한개이다
##

[3-1] 복합키(Composite Key)
복합 키(Composite Key)는 두 개 이상의 컬럼을 Key로 지정하는 것을 말한다.
PK(Primary Key, 기본키)는 한 테이블에 한 개만 존재할 수 있다.
기본키를 primary key(Id,Seq,Group) 이렇게 만들면 3개의칼럼으로 구성된 기본키1개가 되는것

복합키로 이름, 번호가 기본키로 생성된 경우
이름   번호
김똘똘, 1
김똘똘, 2  이렇게는 데이터가 들어간다 (중복이 아니므로) 

[4]대체키(Alternate Key)
후보키가 두개 이상일 때 어느 하나를 기본키로 지정하고 남은 후보키를 대체키라 한다
대체키는 기본키로 선정되지 않은 후보키이다

[5]외래키(Foreign Key)
관계를 맺고 있는 릴레이션 R1, R2 에서 릴레이션 R1이 참조하고 있는 릴레이션 R2의 기본키와 같은 R1 릴레이션의 속성을 외래키라고 한다.
테이블이 다른 테이블의 데이터를 참조하여 테이블간의 관계를 연결하는 키로서
다른 테이블의 데이터를 참조할 때 ##없는 값을 참조할 수 없도록 제약##을 주는 것이다
참조 될 테이블(A)이 먼저 만들어지고 참조하는 테이블(B)에 값이 입력되어야 한다
이떄 참조될(A)열의 값은 참조될(A) 테이블에서 기본키(Primary Key)로 설정 되어 있어야 한다
외래키는 참조되는 테이블의 기본키와 동일한 키 속성을 가진다
부모 테이블 먼저 삭제될 수 없다. 왜냐하면 부모테이블을 참조하는데 부모테이블이 삭제되면 
자식테이블은 참조하는 것이 없어지기 때문에 외래키 오류가 생긴다
외래키 관계에서 부모테이블을 삭제하려면 자식테이블 먼저 삭제한 후 부모테이블을 삭제해야한다
