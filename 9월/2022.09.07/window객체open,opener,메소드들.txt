window 객체의 메소드

window.open

window.open(URL, name, specs, replace)
(자식창으로 열 페이지 주소, window창의 이름, 옵션, replace --> 크롬에서는 예외처리함 빠짐)

window.open("windowBasic1PopUp.jsp"(열페이지 주소),"naver"(window창 이름),
	"width=300px, height=400px," +
	"left=200px, top=20px, scrollbars=no, toolbar=no, location=no"(옵션지정))
	
window.open에서 name 정리
1.3. name
	새로 열릴 창의 속성 또는 창의 이름을 지정합니다. 선택적인 값으로 기본값은 "_blank" 입니다. 사용 가능한 값을 다음과 같습니다.
	_blank : 새 창에 열립니다. 이것이 기본값입니다.
	_parent : 부모 프레임에 열립니다.
	_self : 현재 페이지를 대체합니다.
	_top : 로드된 프레임셋을 대체합니다.
name(임의의 이름) : 새 창이 열리고 창의 이름을 지정합니다. 
동일한 이름에 다시 open() 을 하면 기존의 열린창의 내용이 바뀝니다. 다른 이름을 사용하면 또다른 새창이 열립니다.


window.open에서 specs(옵션 정리) 크롬에서는 작동안하는애들도 꽤 있네 
- channelmode=yes|no|1|0 	: 전체화면으로 창이 열립니다. ##IE에서만 동작합니다.##
- directories=yes|no|1|0 	: (사용되지 않습니다.) 디렉토리 버튼의 표시여부
- fullscreen=yes|no|1|0 	: 전체 화면 모드. ##IE에서만 동작합니다.##
- height=pixels 			: 창의 높이를 지정합니다.(height=600)
- width=pixels 				: 창의 너비를 지정합니다.(width=500)
- left=pixels 				: 창의 화면 왼쪽에서의 위치를 지정합니다. 음수는 사용할 수 없습니다.
- top=pixels 				: 창의 화면 위쪽에서의 위치를 지정합니다. 음수는 사용할 수 없습니다.
- location=yes|no|1|0 		: 주소 표시줄 사용여부를 지정합니다. ##Opera에서만 동작합니다.##
- menubar=yes|no|1|0 		: 메뉴바 사용여부를 지정합니다.
- resizable=yes|no|1|0 		: 창의 리사이즈 가능 여부를 지정합니다. ##IE에서만 동작합니다.##
- scrollbars=yes|no|1|0 	: 스크롤바 사용여부를 지정합니다. ##IE, Firefox, Opera##에서 동작합니다.
- status=yes|no|1|0 		: 상태바를 보여줄지 지정합니다.
- titlebar=yes|no|1|0 		: 타이틀바를 보여줄지 지정합니다. 호출 응용 프로그램이 HTML 응용 프로그램이거나 신뢰할 수있는 대화 상자가 아니면 무시됩니다.
- toolbar=yes|no|1|0 		: 툴바를 보여줄지 지정합니다. ##IE, Firefox##에서 동작합니다.

#########팝업에서 즉 부모->자식창 관계에서 사용########################

Window opener Property - Window 객체의 속성 - opener

문법 : window.opener --> 부모창의 요소를 찾는 방법(창 -> 팝업창 구조에서 사용됨 주로)

즉 window.open 관계로 열린 창에서만 사용이 가능하다 (window.open(자식창주소) 이니까)

ex)팝업창(자식)에서 부모창의 element(요소)의 값을 사용하려면?
window.opener.document.getElementById('parentText').value;
거꾸로 팝업창(자식) -> 부모창으로 element(요소)의 값등을 전달할때도 window.opener를 사용한다
<script>
	function setParentText(){
	opener.document.getElementById("pInput").value = document.getElementById("cInput").value};
<script>
부모창.jsp <input type="text" id='pInput'>
자식창.jsp <input type="text" id='cInput'>
자식인풋의 값을 부모인풋의 값으로 대입한다 (무조건 왼쪽에 오른쪽값을 대입한다) 순서도 오른쪽부터 읽어서 왼쪽으로 대입

#####참조 페이지#####
JavascriptExam 프로젝트에서 아래 페이지 참조
windowBasic1Test.jsp(부모창)
windowBasic1PopUpTest.jsp(부모창에서 window.open으로 연 팝업 즉 자식창)


window.location (윈도우 객체의 하위 객체(속성))

##location.href 는 location 객체에 속해있는 프로퍼티로 현재 접속중인 페이지 정보를 갖고 있습니다.##
##또한 값을 변경할 수 있는 프로퍼티이기 때문에 다른 페이지로 이동하는데도 사용되고 있습니다.##

자바스크립트 location.href 로 현재페이지 확인 방법
location.href;
자바스크립트 location.href 로 페이지 이동 방법
location.href = "이동할 페이지 주소";

window.location.href 	 :returns the href (URL) of the current page 		(현재페이지 URL 주소)
window.location.hostname :returns the domain name of the web host	  		(웹호스트의 도메인명)
window.location.pathname :returns the path and filename of the current page	(현재페이지의 경로와 파일명)
window.location.protocol :returns the web protocol used (http: or https:)	(현재웹의 프로토콜 http인지 https인지)
window.location.assign() :loads a new document								(새로운 문서를 불러온다)