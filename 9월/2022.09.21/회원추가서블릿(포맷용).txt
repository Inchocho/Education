package spms.servlets;

import java.io.IOException;
import java.io.PrintWriter;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletContext;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import spms.dao.MemberDao;
import spms.dto.MemberDto;

@WebServlet(value = "/member/add")
// 신규 회원 추가
public class MemberAddServlet extends HttpServlet {
	@Override
	protected void doGet(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException {
		// TODO Auto-generated method stub

		res.sendRedirect("./MemberForm.jsp");

//      res.setContentType("text/html");
//      res.setCharacterEncoding("UTF-8");
//      PrintWriter out = res.getWriter();
//      
//      String htmlStr = "";
//      
//      htmlStr += "<html><head><title>회원 등록</title></head>";
//      htmlStr += "<body>";
//      htmlStr += "<h1>회원등록</h1>"  ;
//      htmlStr += "<form action='add' method='post'>";
//      htmlStr += "이름: <input type='text' name='name'><br>";
//      htmlStr += "이메일: <input type='text' name='email'><br>";
//      htmlStr += "암호: <input type='password' name='password'><br>";
//      htmlStr += "<input type='submit' value='추가'>";
//      htmlStr += "<input type='reset' value='취소' onclick='location.href=\"./list\"'>";
//      htmlStr += "</form>";
//      htmlStr += "</body></html>";
//      
//      out.print(htmlStr);
	}

	@Override
	protected void doPost(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException {
		// TODO Auto-generated method stub

		Connection conn = null;
//         PreparedStatement pstmt = null;   

		MemberDto memberDto = new MemberDto();

		int result = 0;
		try {
			String email = req.getParameter("email");
			String pwd = req.getParameter("password");
			String name = req.getParameter("name");

			memberDto.setEmail(email);
			memberDto.setPassword(pwd);
			memberDto.setName(name);

			// 1단계 db 드라이버 로드
			ServletContext sc = this.getServletContext();

			// 2단계 데이터베이스 연결
			conn = (Connection) sc.getAttribute("conn");
//            String sql = "";
//            
//            sql += "insert into members ";
//            sql += "value(MNO, EMAIL, PWD, MNAME, CRE_DATE, MOD_DATE)";
//            sql += "values(MEMBERS_MNO_SEQ.NEXTVAL, ?, ?, ?, SYSDATE, SYSDATE)";
//            
//            //3단계 sql 실행 객체 준비
//            pstmt = conn.prepareStatement(sql); // createStatement ㅡ SQL문장을 쓸 수 있는 객체?
//            
//            pstmt.setString(1, emailStr);
//            pstmt.setString(2, pwdStr);
//            pstmt.setString(3, nameStr);
//            
//            // 4단계 sql문 수행
//            pstmt.executeUpdate();
			MemberDao memberDao = new MemberDao();
			memberDao.setConnection(conn);

			// 0이면 넣은 데이터가 없다 0이외에는 성공
			result = memberDao.memberInsert(memberDto);
			System.out.println("db member테이블에 추가한 횟수:" + result);

			if (result == 0) {
				System.out.println("회원가입 실패");
			}

			res.sendRedirect("./list"); // sendRedirect 경로로 바로 간

			// 5단계 select 결과물 활용하기
			/*
			 * res.setContentType("text/html"); // res.setCharacterEncoding("UTF-8"); //
			 * UTF-8로 바꾼다
			 * 
			 * PrintWriter out = res.getWriter(); // getWriter 예를 통해서 화면을 타자기? 얻게됨
			 * 
			 * String htmlStr = "";
			 * 
			 * htmlStr += "<html><head><title>회원등록결과</title>"; //새로고침 자동 수행 htmlStr +=
			 * "<meta http-equiv='Refresh' content='1; url=list'>";
			 * 
			 * htmlStr += "</head>"; htmlStr += "<body>"; htmlStr += "<p>등록 성공입니다!</p>";
			 * htmlStr += "</body></html>";
			 * 
			 * out.println(htmlStr);
			 */

		} catch (Exception e) {
			// TODO: handle exception
//            e.printStackTrace();

			req.setAttribute("error", e);

			RequestDispatcher dispatcher = req.getRequestDispatcher("/Error.jsp");
			dispatcher.forward(req, res);
		}
//          finally {
//            // 6 단계 jdbc 객체 메모리 회수
//            if(pstmt != null) {
//               try {
//                 pstmt.close();
//               } catch (SQLException e) {
//                  // TODO Auto-generated catch block
//                  e.printStackTrace();
//               }
//            }
//            if(pstmt != null) {
//               try {
//                  pstmt.close();
//               } catch (SQLException e) {
//                  // TODO Auto-generated catch block
//                  e.printStackTrace();
//               }
//            }
//            
//         
//         }

	}

}