자바스크립트(인터프리터)
실행순서
무조건 코드순서대로
(전역변수라고 먼저 실행되지않는다)

var,let,const 변수선언 

##변수선언 없이 변수명만 존재하는경우 - 전역변수 << 이방식 사용하지 않는다## 가독성 매우 떨어지게됨

무조건 전역변수 선언시 var를 함수밖에 선언해서 전역변수로 사용한다

##########전역변수 선언은 반드시 함수 외부에서 var를 통해 선언##############

호이스팅
var 변수 선언과 함수선언문에서만 호이스팅이 일어난다.
즉 var 변수선언 var a; var b; var c; 얘네는 먼저 끌어올려짐 (할당 즉 값은 없음 undefined)
var 변수/함수의 선언만 위로 끌어 올려지며, 할당은 끌어 올려지지 않는다.
let/const 변수 선언과 함수표현식에서는 호이스팅이 발생하지 않는다.

자바스크립트 함수는 실행되기 전에 함수 안에 필요한 변수값들을 모두 모아서 유효 범위의 최상단에 선언한다.
자바스크립트 Parser가 함수 실행 전 해당 함수를 한 번 훑는다.
함수 안에 존재하는 변수/함수선언에 대한 정보를 기억하고 있다가 실행시킨다.
유효 범위: 함수 블록 {} 안에서 유효
즉, 함수 내에서 아래쪽에 존재하는 내용 중 필요한 값들을 끌어올리는 것이다.
실제로 코드가 끌어올려지는 건 아니며, 자바스크립트 Parser 내부적으로 끌어올려서 처리하는 것이다.
실제 메모리에서는 변화가 없다.

즉

<script>
	var a = 10;				생성순서(1) var a 변수 생성 (a=10)
	globalb = 20;			생성순서(2) 전역변수 globalb 생성 (b=20)
	
	function ex1(){			생성순서(3) function ex1(){} 생성
		globalc = 30;		
		var localNum = 40;	
		
		docu~ a;			
		docu~ globalb;
		docu~ globalc;
		docu~ localNum;
	}
	
	ex1();					생성순서(4) 함수 호출하여 이제야 함수 내부코드가 실행됨
		globalc = 30;		생성순서(5) 전역변수 globalc가 생성
		var localNum = 40;	생성순서(6) 지역변수 localNum이 생성순서
		
		밑에 출력 docu~		순서(7) 함수 실행됨 --> 함수 종료후 지역변수 localNum은 ##삭제된다## 매우중요
	
		docu~ a;			순서(8) a = 10
		docu~ globalb;		순서(9) globalb = 20
		docu~ globalc;		순서(10)globalc = 30
		docu~ localNum;     순서(11)localNum은 지역변수 삭제되서 안나옴 에러(정의되지않은변수);
		
	var back = 50;
	
	function ex2(){
		var back = 100;
		console.log(back);	// 100(지역변수)
	}
	
	console.log(back); // 50(전역변수)
</script>

자바스크립트 함수 특징

1.리턴타입 지정해줄 필요 없음 그냥 function 선언만 하면 함수임
2.매개변수 타입 지정해줄 필요 없음 (매개변수: 타입)으로 지정 해 줄 수도 있음 --> 이건 물론 TypeScript에서만 가능
2-1 이경우 방식 func te1(num : number) : number --> 의미 매개변수타입은 숫자 // 리턴값도 숫자 
2-2 func te1(num? : number) : number --> 이경우 매개변수는 있어도 되고 없어도 되고 있으면 숫자타입이다
3.값을 return시 그냥 return ~~~ 로 값을 리턴해주면 된다
